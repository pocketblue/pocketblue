on:
  workflow_call:
    inputs:
      push_tag:
        required: true
        type: string
      from_tag:
        required: true
        type: string
      from_image:
        required: true
        type: string
      image:
        required: true
        type: string
      containerfile:
        required: true
        type: string
      latest:
        required: false
        type: boolean
        default: false
      expires_after:
        required: false
        type: string
      rechunk:
        required: false
        type: boolean
        default: false

jobs:
  build:
    name: ${{ inputs.image }}:${{ inputs.push_tag }}
    runs-on: ubuntu-24.04-arm
    permissions:
      packages: write
    steps:
      - name: Clone the repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - id: getcontext
        shell: bash
        run: echo "context=$(dirname ${{ inputs.containerfile }})" >> $GITHUB_OUTPUT

      - name: Build container
        id: build
        run: |
          sudo buildah bud \
            -f ${{ inputs.containerfile }} \
            --build-arg from=${{ inputs.from_image }}:${{ inputs.from_tag }} \
            --format docker \
            --tls-verify=true \
            -t ${{ inputs.image }}:${{ inputs.push_tag }} \
            ${{ inputs.expires_after && format('--label quay.expires-after={0}', inputs.expires_after) || '' }} \
            ${{ steps.getcontext.outputs.context }}

      - name: Run rechunker
        id: rechunk
        if: inputs.rechunk
        uses: hhd-dev/rechunk@ded27feba22df48134eece2c66ba0fca1289ff40 # v1.2.3
        with:
          rechunk: 'ghcr.io/hhd-dev/rechunk:v1.2.3'
          prev-ref: ${{ vars.REGISTRY }}/${{ inputs.image }}:${{ inputs.push_tag }}
          ref: localhost/${{ inputs.image }}:${{ inputs.push_tag }}
          skip_compression: true
          version: ${{ inputs.push_tag }}.20<date>
          pretty: ${{ inputs.push_tag }}.20<date>
          revision: ${{ github.sha }}

      - name: Login to registry
        env:
          REGISTRY: ${{ vars.REGISTRY }}
          USERNAME: ${{ vars.REGISTRY_USERNAME }}
          PASSWORD: ${{ secrets.REGISTRY_TOKEN }}
        run: |
          sudo podman login --username $USERNAME --password $PASSWORD $REGISTRY

      - name: Push to registry
        env:
          IMAGE: ${{ vars.REGISTRY }}/${{ inputs.image }}
          TAG: ${{ inputs.push_tag }}
        run: |
          set -uexo pipefail

          if [[ ${{ inputs.rechunk }} == true ]]; then
            RECHUNKED_IMAGE=$(sudo podman pull ${{ steps.rechunk.outputs.ref }})
            sudo podman image tag ${RECHUNKED_IMAGE} $IMAGE:$TAG
          else
            sudo podman image tag localhost/${{ inputs.image }}:$TAG $IMAGE:$TAG
          fi
          sudo podman push $IMAGE:$TAG

          if [[ ${{ inputs.latest }} == true ]]; then
            sudo podman image tag $IMAGE:$TAG $IMAGE:latest
            sudo podman push $IMAGE:latest
          fi
